/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buscaminas;

import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Vector;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.Timer;
import static javax.xml.bind.DatatypeConverter.parseInt;

/**
 *
 * @author DAW2
 */
public class Ventana2 extends javax.swing.JFrame {

    /**
     * Creates new form Ventana2
     */
    int num,num2, numbomboriginal,numbomb,abiertos;
    double contadorabiertos=0;
    public Ventana2() {
        initComponents();
        setLocationRelativeTo(null);
        setVisible(true);
        setResizable(true);
        setTitle("Buscaminas");
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPanel = new javax.swing.JPanel();
        lbltiempo = new javax.swing.JLabel();
        lblBombas = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlPanel.setPreferredSize(new java.awt.Dimension(300, 353));

        lbltiempo.setText("Tiempo");
        lbltiempo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbltiempo.setMaximumSize(new java.awt.Dimension(130, 36));
        lbltiempo.setMinimumSize(new java.awt.Dimension(20, 36));
        lbltiempo.setPreferredSize(new java.awt.Dimension(100, 36));

        lblBombas.setText("Bombas");
        lblBombas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblBombas.setMinimumSize(new java.awt.Dimension(20, 16));

        jLabel3.setText("Reiniciar");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setMaximumSize(new java.awt.Dimension(120, 36));
        jLabel3.setMinimumSize(new java.awt.Dimension(20, 36));
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 16));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlPanelLayout = new javax.swing.GroupLayout(pnlPanel);
        pnlPanel.setLayout(pnlPanelLayout);
        pnlPanelLayout.setHorizontalGroup(
            pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBombas, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbltiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlPanelLayout.setVerticalGroup(
            pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBombas, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltiempo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(306, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        Ventana2 ventana = new Ventana2();
        ventana.creargraella(num, num2, numbomboriginal);
        
        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana2().setVisible(true);
            }
        });
    }

String [] crearbombas(int bomb, int num,int num2){
    String[] bombas=new String[bomb];
    int aleatorio1,aleatorio2;
    boolean correcto=false;
    for(int i=0;i<bomb;i++){
        do{
             aleatorio1=(int) Math.floor(Math.random()*num);
             aleatorio2=(int) Math.floor(Math.random()*num2);
             //System.out.println(aleatorio1+"/"+aleatorio2);
            for(int y=0;y<bombas.length;y++){
                if(bombas[y]!=(aleatorio1+"/"+aleatorio2)){
                    correcto=true;
                }else{
                    correcto=false;
                }
            }
        }while(!correcto);
        bombas[i]=aleatorio1+"/"+aleatorio2;
        
       // System.out.println("bombas "+i+": "+ bombas[i]);
    }
    return bombas;
}

int valorbombas(String[] bombas,int i,int y){
    boolean bombaono=false;
    int contadorbobmascerca=0;
    for(int c=0;c<bombas.length;c++){
        
//System.out.println("No bomba");
        if(bombas[c].equals(i+"/"+y)){
          //  System.out.println(bombas[c]+".equals("+i+"/"+y+")");
         //   System.out.println("bomba "+i+" "+y);
         //   System.out.println("Entra");
            bombaono=true;
            return 9999;
            //System.out.println("bomba "+c+" :"+i+" "+y);
            //System.out.println(valor[i][y]+" "+i+"/"+y);
        }else{
            bombaono=false;
            
            if(bombas[c].equals((i-1)+"/"+(y-1))){
                contadorbobmascerca++;
            }
            if(bombas[c].equals((i)+"/"+(y-1))){
                contadorbobmascerca++;
            }
            if(bombas[c].equals((i+1)+"/"+(y-1))){
                contadorbobmascerca++;
            }

            if(bombas[c].equals((i-1)+"/"+(y))){
                contadorbobmascerca++;
            }
            if(bombas[c].equals((i+1)+"/"+(y))){
                contadorbobmascerca++;
            }

            if(bombas[c].equals((i-1)+"/"+(y+1))){
                contadorbobmascerca++;
            }
            if(bombas[c].equals((i)+"/"+(y+1))){
                contadorbobmascerca++;
            }
            if(bombas[c].equals((i+1)+"/"+(y+1))){
                contadorbobmascerca++;
            }
            
        }
    }
    return contadorbobmascerca;
}

void mostrarbombas(){
    habilitarbotones=false;
    timer.stop();
    for(int x=0;x<buttons.length;x++){
        for(int y=0; y<buttons[0].length;y++){
            for(int i=0;i<this.bombas.length;i++){
                String[] split=bombas[i].split("/");
                
                if(buttons[x][y].getIcon()!=null && split[0].equals((x+"")) && split[1].equals(y+"") ){
                    System.out.println("entra");
                    Image img = new ImageIcon(this.getClass().getResource("../img/flag.gif")).getImage();
                    Image imagenescalada = img.getScaledInstance(buttons[x][y].getWidth(), buttons[x][y].getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icn=new ImageIcon(imagenescalada);
                    i=this.bombas.length;
                    this.buttons[x][y].setIcon(icn);
                }else if(buttons[x][y].getIcon()!=null){
                    System.out.println(x+"=="+split[0]+" "+ y+"=="+split[1]);
                    Image img = new ImageIcon(this.getClass().getResource("../img/bombcros.gif")).getImage();
                    Image imagenescalada = img.getScaledInstance(buttons[x][y].getWidth(), buttons[x][y].getHeight(), Image.SCALE_DEFAULT);
                    ImageIcon icn=new ImageIcon(imagenescalada);
                    this.buttons[x][y].setIcon(icn);
                }
            }
        }
    }
    System.out.println(this.bombas.length);
    for(int i=0;i<this.bombas.length;i++){
        Image img = new ImageIcon(this.getClass().getResource("../img/bomb.gif")).getImage();
        String[] split=new String[2];
        split=bombas[i].split("/");
        //System.out.println(split[1]);
        int c=parseInt(split[0]);
        int c2=parseInt(split[1]);
        
        if(this.buttons[c][c2].getIcon()==null){
            Image imagenescalada = img.getScaledInstance(buttons[c][c2].getWidth(), buttons[c][c2].getHeight(), Image.SCALE_DEFAULT);
            ImageIcon icn=new ImageIcon(imagenescalada);
            this.buttons[c][c2].setIcon(icn);
            buttons[c][c2].removeMouseListener(null);
            this.buttons[c][c2].setForeground(Color.red);
        }
    }
}


String[] bombas;
JButton[][] buttons;
int[][] valor;
boolean habilitarbotones;
void voltear0(int f, int c){
    if((f+1<num)){
        //System.out.println("1");

        //System.out.println(valor[f+1][c]+" "+f+" "+c+" enabled: "+buttons[f+1][c].isEnabled());
        //if(valor[f+1][c]==0 ) {
            
            if(buttons[f+1][c].isEnabled()){
                //System.out.println("cccc");
                buttons[f+1][c].setEnabled(false);
            /*    voltear0((f+1),c);
            }
        }else{*/
            //System.out.println("bbbbb");
            introducirvalor((f+1),(c));
        }
    }
    if((f+1<num) && (c+1<num2) ){
                //System.out.println("2");

        //System.out.println(valor[f+1][c+1]+" "+f+" "+c+" enabled: "+buttons[f+1][c+1].isEnabled());
        //if(valor[f+1][c+1]==0 ) {
            if(buttons[f+1][c+1].isEnabled()){
                //System.out.println("cccc");
                buttons[f+1][c+1].setEnabled(false);
             /*   voltear0((f+1),c+1);
            }
        }else{*/
            //System.out.println("bbbbb");
            introducirvalor((f+1),(c+1));
        }
    }
    //System.out.println((f+1)+"<"+num +"  "+(c-1)+">="+0);

    if((f+1<num) && (c-1>=0)){
        //System.out.println("3");
        //System.out.println(valor[f+1][c-1]+" "+f+" "+c+" enabled: "+buttons[f+1][c-1].isEnabled());
      //  if(valor[f+1][c-1]==0 ) {
            if(buttons[f+1][c-1].isEnabled()){
                //System.out.println("cccc");
                buttons[f+1][c-1].setEnabled(false);
              /*  voltear0((f+1),c-1);
            }
        }else{*/
           // System.out.println("bbbbb");
            introducirvalor((f+1),(c-1));
        }
    }
    if((f-1>=0)){
       // System.out.println(valor[f-1][c]+" "+f+" "+c+" enabled: "+buttons[f-1][c].isEnabled());
       // System.out.println("4");
      //  if(valor[f-1][c]==0 ) {
            if(buttons[f-1][c].isEnabled()){
              //  System.out.println("cccc");
                buttons[f-1][c].setEnabled(false);
         /*       voltear0((f-1),c);
            }
        }else{*/
           // System.out.println("bbbbb");
            introducirvalor((f-1),(c));
        }
    }
    if((f-1>=0) && (c+1<num2)){
       // System.out.println(valor[f-1][c+1]+" "+f+" "+c+" enabled: "+buttons[f-1][c+1].isEnabled());
      //  System.out.println("5");
      //  if(valor[f-1][c+1]==0 ) {
            if(buttons[f-1][c+1].isEnabled()){
           //     System.out.println("cccc");
                buttons[f-1][c+1].setEnabled(false);
            /*    voltear0((f-1),c+1);
            }
        }else{*/
           // System.out.println("bbbbb");
            introducirvalor((f-1),(c+1));
        }
    }
    
    if((f-1>=0) && (c-1>=0)){
       // System.out.println("6");
       // System.out.println(valor[f-1][c-1]+" "+f+" "+c+" enabled: "+buttons[f-1][c-1].isEnabled());
       // if(valor[f-1][c-1]==0 ) {
            if(buttons[f-1][c-1].isEnabled()){
                //System.out.println("cccc");
                buttons[f-1][c-1].setEnabled(false);
             /*   voltear0((f-1),c-1);
            }
        }else{*/
          //  System.out.println("bbbbb");
            introducirvalor((f-1),(c-1));
        }
    }
    
    if((c+1<num2)){
       // System.out.println("7");
        //System.out.println(valor[f][c+1]+" "+f+" "+c+" enabled: "+buttons[f][c+1].isEnabled());

       // if(valor[f][c+1]==0 ) {
            if(buttons[f][c+1].isEnabled()){
           //     System.out.println("cccc");
                buttons[f][c+1].setEnabled(false);
           /*     voltear0((f),c+1);
            }
        }else{*/
          //  System.out.println("bbbbb");
            introducirvalor((f),(c+1));
        }
    }

    if((c-1>=0)){
       // System.out.println("8");
          //      System.out.println(valor[f][c-1]+" "+f+" "+c+" enabled: "+buttons[f][c-1].isEnabled());

       // if(valor[f][c-1]==0 ) {
            if(buttons[f][c-1].isEnabled()){
            //    System.out.println("cccc");
                buttons[f][c-1].setEnabled(false);
              /*  voltear0((f),c-1);
            }
        }else{*/
         //   System.out.println("bbbbb");
            introducirvalor((f),(c-1));
        }
    }
    
}

void introducirvalor(int f, int c) {
    //contadorabiertos=contadorabiertos+0.5;
    String path;
   switch(valor[f][c]){
        case 1:
           // System.out.println("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa");
            //path="../img/1.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>1</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 2:
            //path="../img/2.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>2</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 3:
            //path="../img/3.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>3</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 4:
            //path="../img/4.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>4</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 5:
            //path="../img/5.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>5</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 6:
            //path="../img/6.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>6</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 7:
            //path="../img/7.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>7</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }
            break;
        case 8:
            //path="../img/8.gif";
            buttons[f][c].setText("<html><p style='padding:0px'>8</p></html>");
            //buttons[f][c].setEnabled(false);
            if(buttons[f][c].getMouseListeners().length>0){
                buttons[f][c].removeMouseListener(buttons[f][c].getMouseListeners()[0]);
            }            break;
        case 9999:
            path="../img/bomb.gif";
            //buttons[f][c].setEnabled(false);
            mostrarbombas();
           // System.out.println("Bomba");
            break;
        default:
            buttons[f][c].setEnabled(false);
            voltear0(f,c);
            path="";
            break;
    }
    buttons[f][c].setFont(buttons[f][c].getFont().deriveFont(17.0f));
    
    buttons[f][c].removeAll();
}



void creargraella(final int num,final int num2,int bomb){
    habilitarbotones=true;
    this.num=num;
    numbomb=bomb;
    numbomboriginal=bomb;
    this.abiertos=num*num2-bomb-2;
    this.num2=num2;
    String[] bombas=new String[bomb];
    this.valor= new int[num][num2];
    bombas=crearbombas(bomb,num,num2);    
    this.bombas=new String[bomb];
    this.buttons= new JButton[num][num2];
    this.bombas=bombas;
    for(int i=0;i<num;i++){
        for(int y=0;y<num2;y++){
            this.buttons[i][y]=new JButton();

            this.pnlPanel.add(this.buttons[i][y]);
            this.buttons[i][y].setBounds((10+(i*40)),50+(y*40),40, 40);    
            //System.out.println(i+"/"+y);
            this.setSize(75+(i*40),135+(y*40));    
           
            valor[i][y]=valorbombas(bombas,i,y);
            
            this.buttons[i][y].addMouseListener (new MouseAdapter(){
                public void mouseReleased(MouseEvent  e) {
                    if(habilitarbotones){
                        if( e.getButton() == MouseEvent.BUTTON1){
                            for(int f=0;f<num;f++){
                                for(int c=0;c<num2;c++){                       
                                    if(e.getSource()==buttons[f][c]){
                             //           System.out.println(valor[f][c]+ " f: "+f + " c: "+c);        
                                        String path;
                                        buttons[f][c].setIcon(null);
                                        switch(valor[f][c]){
                                            case 1:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/1.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>1</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 2:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/2.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>2</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 3:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/3.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>3</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 4:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/4.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>4</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 5:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/5.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>5</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 6:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/6.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>6</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 7:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/7.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>7</p></html>");
                                                buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 8:
                                                 buttons[f][c].setEnabled(false);
                                                //path="../img/8.gif";
                                                buttons[f][c].setText("<html><p style='padding:0px'>8</p></html>");
                                               buttons[f][c].removeMouseListener(this);
                                                break;
                                            case 9999:
                                                path="../img/bomb2.gif";
                                                buttons[f][c].removeMouseListener(this);
                                                mostrarbombas();

                                                break;
                                            default:
                                                buttons[f][c].setEnabled(false);
                                                voltear0(f,c);
                                                path="";
                                                break;
                                        }
                                       
                                        System.out.println(contadorabiertos);
                                        System.out.println(contadorabiertos + ">"+abiertos);
                                        
                                       
                                        buttons[f][c].setFont(buttons[f][c].getFont().deriveFont(17.0f));
                                    }
                                }
                            }

                        }else{
                            for(int f=0;f<num;f++){
                                for(int c=0;c<num2;c++){
                                    if(e.getSource()==buttons[f][c]){
                                            //System.out.println("entra");
                                            if(buttons[f][c].isEnabled()){
                                                if(buttons[f][c].getIcon()==null){
                                                    Image img = new ImageIcon(this.getClass().getResource("../img/flag.gif")).getImage();
                                                    Image imagenescalada = img.getScaledInstance(buttons[f][c].getWidth(), buttons[f][c].getHeight(), Image.SCALE_DEFAULT);
                                                    ImageIcon icn=new ImageIcon(imagenescalada);
                                                    buttons[f][c].setIcon(icn);
                                                    contadorBombas(-1);
                                                }else{
                                                    buttons[f][c].setIcon(null);
                                                    contadorBombas(+1);
                                                }
                                            }
                                    }}}
                        }
                    }
                    contadorabiertos=0;
                    for(int x=0;x<num;x++){
                        for(int y=0;y<num2;y++){ 
                            if(!buttons[x][y].isEnabled()){
                                contadorabiertos++;
                                
                            }
                        }
                    }



                    if(contadorabiertos>=abiertos){
                        System.out.println(contadorabiertos);
                        ventana3 ventana=new ventana3();
                        ventana.lblTexto.setText("<html>"
                                + "<h1>Victoria!!!</h1>"
                                + "<h3>Has completado este buscaminas en "+tiempo+" segundos</h3>"
                                + "</html>");
                        dispose(); 
                    }
                }
                });
            //System.out.println(i);
           

        }
    }
    
    System.out.println(this.getSize());
    //System.out.println();
    timer = new Timer (1000, new ActionListener ()
    {
        
        public void actionPerformed(ActionEvent e)
        {
            añadirtiempo();
           // System.out.println(tiempo);
        }
    });
    timer.start();
    contadorBombas(10);
}
int tiempo=0;
Timer timer;
void contadorBombas(int añadir_quitar){
    if(añadir_quitar==-1){
        this.numbomb--;
    }else if(añadir_quitar==1){
        this.numbomb++;
    }
    this.lblBombas.setText(numbomb+"");
}
 void añadirtiempo(){
     tiempo++;
     this.lbltiempo.setText(tiempo+"");
 }
    public Ventana2(GraphicsConfiguration gc) {
        super(gc);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblBombas;
    private javax.swing.JLabel lbltiempo;
    private javax.swing.JPanel pnlPanel;
    // End of variables declaration//GEN-END:variables
}
